In theoretical computer science and formal language theory, a formal language is empty if its set of valid sentences is the empty set. The emptiness problem is the question of determining whether a language is empty given some representation of it, such as a finite-state automaton. For an automaton having 
  
    
      
        n
      
    
    {\displaystyle n}
   states, this is a decision problem that can be solved in 
  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
   time. However, variants of that question, such as the emptiness problem for non-erasing stack automata, are PSPACE-complete.The emptiness problem is undecidable for context-sensitive grammars, a fact that follows from the undecidability of the halting problem. It is, however, decidable for context-free grammars.


== References ==